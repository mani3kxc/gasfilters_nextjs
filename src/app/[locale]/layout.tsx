import {notFound} from 'next/navigation';
import {unstable_setRequestLocale} from 'next-intl/server';
import {Metadata} from "next";
import {NextIntlClientProvider} from "next-intl";
import {ReactNode} from "react";

// Can be imported from a shared config
const locales = ['en', 'pl'];

export function generateStaticParams() {
    return locales.map((locale) => ({locale}));
}

export const metadata: Metadata = {
    title: 'Create Next App',
    description: 'Generated by create next app',
}

type Props = {
    children: ReactNode
    params: { locale: string }
}

async function getMessages(locale: string) {
    try {
        return (await import(`../../../messages/${locale}.json`)).default
    } catch (error) {
        notFound()
    }
}

export default async function LocaleLayout({ children, params: {locale}}: Props) {
    // Validate that the incoming `locale` parameter is valid
    const messages = await getMessages(locale)

    if (!locales.includes(locale as any)) notFound();
    unstable_setRequestLocale(locale);

    return (
        <html lang={locale}>
        <body>
        <NextIntlClientProvider locale={locale} messages={messages}>
            {children}
        </NextIntlClientProvider>
        </body>
        </html>
    );
}
